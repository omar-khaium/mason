import '../../../../core/shared/shared.dart';
import '../../{{name.snakeCase()}}.dart';

class {{name.pascalCase()}}LocalDataSourceImpl extends {{name.pascalCase()}}LocalDataSource {
  final Map<String, {{name.pascalCase()}}Entity> _cache = {};

  @override
  FutureOr<void> add({
    required Identity identity,
    required {{name.pascalCase()}}Entity {{name.camelCase()}},
  }) {
    _cache[identity.guid] = {{name.camelCase()}};    
  }

  @override
  FutureOr<void> update({
    required Identity identity,
    required {{name.pascalCase()}}Entity {{name.camelCase()}},
  }) {
    _cache[identity.guid] = {{name.camelCase()}};    
  }

  @override
  FutureOr<void> remove({
    required Identity identity,
  }) {
    _cache.remove(identity.guid);    
  }

  @override
  FutureOr<void> removeAll() {
    _cache.clear();    
  }

  @override
  FutureOr<{{name.pascalCase()}}Entity> find({
    required Identity identity,
  }) {
    final item = _cache[identity.guid];
    if (item == null) {
      throw {{name.pascalCase()}}NotFoundInLocalCacheFailure();
    }
    return item;
  }
}